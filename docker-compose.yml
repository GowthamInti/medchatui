version: '3.8'

services:
  frontend:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=http://backend:8000/api
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - medchat-network

  # Backend service (placeholder - would be your actual backend)
  backend:
    image: your-backend-image:latest
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://user:password@db:5432/medchat
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - medchat-network

  # Database service (placeholder)
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=medchat
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - medchat-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    networks:
      - medchat-network

  # Nginx load balancer (for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
    restart: unless-stopped
    networks:
      - medchat-network

volumes:
  postgres_data:

networks:
  medchat-network:
    driver: bridge